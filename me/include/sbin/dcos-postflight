#!/usr/bin/env bash
# Run the DC/OS diagnostic script for up to the specified number of seconds to ensure
# we do not return ERROR on a cluster that hasn't fully achieved quorum.
TIMEOUT_SECONDS="$${1:-900}"
function await() {
    until OUT=$$($${CMD} 2>&1) || [[ TIMEOUT_SECONDS -eq 0 ]]; do
        sleep 5
        let TIMEOUT_SECONDS=TIMEOUT_SECONDS-5
    done
    RETCODE=$$?
    if [[ "$${RETCODE}" != "0" ]]; then
        echo "DC/OS Unhealthy\\n\$${OUT}" >&2
        exit $${RETCODE}
    fi
}
CMD="curl --insecure --fail --location --silent http://127.0.0.1/"
echo "Polling web server ($${TIMEOUT_SECONDS}s timeout)..." >&2
await
if [[ -e "/opt/mesosphere/bin/3dt" ]]; then
    # DC/OS >= 1.7
    CMD="/opt/mesosphere/bin/3dt -diag"
    cfg_files=( /opt/mesosphere/packages/3dt*/endpoints_config.json )
    if [ $${#cfg_files[@]} -gt 0 ]; then
        # DC/OS >= 1.8
        # TODO: what if there's more than one? Which should we choose?
        CMD="$${CMD} -endpoint-config=$${cfg_files[0]}"
    fi
elif [[ -e "/opt/mesosphere/bin/dcos-diagnostics.py" ]]; then
    # DC/OS <= 1.6
    CMD="/opt/mesosphere/bin/dcos-diagnostics.py"
else
    echo "Postflight Failure: either 3dt or dcos-diagnostics.py must be present"
    exit 1
fi
echo "Polling component status ($${TIMEOUT_SECONDS}s timeout)..." >&2
await
echo "DC/OS Healthy" >&2
